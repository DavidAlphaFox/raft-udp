option (int32_type) = int_t;

import "raft.proto";

package raft.app;

message ClientLogEntry {
  required string client_log_id   = 1; 
  required bytes  client_log_data = 2;
}

// Client <---> RAFT Server protocol
// ---------------------------------
//

message ClientRequest {
  oneof t {
    ClientLogEntry add_log_entry = 1;
  }
}

message ClientResponse {

  message Result {
    required string client_log_id = 1; 
    optional bytes client_log_result_data = 2;
  }

  message NotALeader {
    optional int32 leader_id = 1;
  }

  oneof t {
    Result add_log_result = 1;
    NotALeader add_log_not_a_leader = 2;
  }
}

// App Server <-----> RAFT Server protocol
// ---------------------------------------
//

message AppRequest {
  
  message AddLogEntries {
    repeated raft.LogEntry log_entries = 1;
  }

  oneof t {
    AddLogEntries add_log_entries = 3; 
  }
}

message AppResponse {

  message Result {
    required int32 index = 1;
    required string id = 2; // TODO this should not be needed  
    optional bytes result_data = 3; 
  }

  message Results {
    repeated Result results = 1; 
  }

  oneof app_response_payload {
    Results add_log_results = 4;
  }
}
