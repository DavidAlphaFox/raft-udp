option (int32_type) = int_t;

import "raft.proto";

package raft.app;

message ClientLogEntry {
  required string id   = 1; 
  required bytes  data = 2;
}

// Client <---> RAFT Server protocol
// ---------------------------------
//

message ClientRequest {
  oneof t {
    ClientLogEntry add_log_entry = 1;
  }
}

message ClientResponse {

  message AddLogSuccess {}
  message AddLogValidationFailure{}
  message AddLogNotALeader {
    optional int32 leader_id = 1;
  }

  oneof t {
    AddLogSuccess            add_log_success            = 1;
    AddLogValidationFailure  add_log_validation_failure = 2;
    AddLogNotALeader         add_log_not_a_leader       = 3;
  }
}

// App Server <-----> RAFT Server protocol
// ---------------------------------------
//

message AppRequest {
  
  message AddLogEntries {
    repeated raft.LogEntry log_entries = 1;
  }

  oneof app_request_payload {
    AddLogEntries add_log_entries = 3; 
  }
}

message AppResponse {

  message Validation {

    message Success { }
    message Failure {
      required string error_message = 1; 
      required int32  error_code    = 2;
    }

    required string id = 1;
    oneof result {
      Success validation_success = 2; 
      Failure validation_failure = 3;
    }
  }

  message Validations {
    repeated Validation validations = 1; 
  }

  oneof app_response_payload {
    Validations     validations      = 4;
  }
}
